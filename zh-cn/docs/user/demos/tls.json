{
  "filename": "tls.md",
  "__html": "<h1>开启 TLS</h1>\n<p>2.7.5 版本在传输链路的安全性上做了很多工作，对于内置的 Dubbo Netty Server 和新引入的 gRPC 协议都提供了基于 TLS 的安全链路传输机制。</p>\n<p>TLS 的配置都有统一的入口，如下所示：</p>\n<p><strong>Provider 端</strong></p>\n<pre><code class=\"language-java\">SslConfig sslConfig = <span class=\"hljs-keyword\">new</span> SslConfig();\nsslConfig.setServerKeyCertChainPath(<span class=\"hljs-string\">\"path to cert\"</span>);\nsslConfig.setServerPrivateKeyPath(args[<span class=\"hljs-number\">1</span>]);\n<span class=\"hljs-comment\">// 如果开启双向 cert 认证</span>\n<span class=\"hljs-keyword\">if</span> (mutualTls) {\n  sslConfig.setServerTrustCertCollectionPath(args[<span class=\"hljs-number\">2</span>]);\n}\n\nProtocolConfig protocolConfig = <span class=\"hljs-keyword\">new</span> ProtocolConfig(<span class=\"hljs-string\">\"dubbo/grpc\"</span>);\nprotocolConfig.setSslEnabled(<span class=\"hljs-keyword\">true</span>);\n</code></pre>\n<p><strong>Consumer 端</strong></p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">if</span> (!mutualTls) {}\n    sslConfig.setClientTrustCertCollectionPath(args[<span class=\"hljs-number\">0</span>]);\n} <span class=\"hljs-keyword\">else</span> {\n    sslConfig.setClientTrustCertCollectionPath(args[<span class=\"hljs-number\">0</span>]);\n    sslConfig.setClientKeyCertChainPath(args[<span class=\"hljs-number\">1</span>]);\n    sslConfig.setClientPrivateKeyPath(args[<span class=\"hljs-number\">2</span>]);\n}\n</code></pre>\n<p>为尽可能保证应用启动的灵活性，TLS Cert 的指定还能通过 -D 参数或环境变量等方式来在启动阶段根据部署环境动态指定，具体请参见 Dubbo 配置读取规则与 TLS 示例</p>\n<p>Dubbo 配置读取规则：<a href=\"http://dubbo.apache.org/zh-cn/docs/user/configuration/configuration-load-process.html\">http://dubbo.apache.org/zh-cn/docs/user/configuration/configuration-load-process.html</a></p>\n<p>TLS 示例：<a href=\"https://github.com/apache/dubbo-samples/tree/master/java/dubbo-samples-ssl\">https://github.com/apache/dubbo-samples/tree/master/java/dubbo-samples-ssl</a></p>\n<blockquote>\n<p>如果要使用的是 gRPC 协议，在开启 TLS 时会使用到协议协商机制，因此必须使用支持 ALPN 机制的 Provider，推荐使用的是 netty-tcnative，具体可参见 gRPC Java 社区的总结： <a href=\"https://github.com/grpc/grpc-java/blob/master/SECURITY.md\">https://github.com/grpc/grpc-java/blob/master/SECURITY.md</a></p>\n</blockquote>\n<p>在服务调用的安全性上，Dubbo 在后续的版本中会持续投入，其中服务发现/调用的鉴权机制预计在接下来的版本中就会和大家见面。</p>\n",
  "link": "/zh-cn/docs/user/demos/tls.html",
  "meta": {}
}